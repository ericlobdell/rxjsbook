{"version":3,"sources":["js/earthquake_viz.js"],"names":[],"mappings":";;;;;;AAIA,IAAI,SAAS,GAAG,2EAA2E,CAAC;;AAE5F,SAAS,SAAS,CAAE,GAAG,EAAG;AACtB,QAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAE,QAAQ,CAAE,CAAC;AAChD,UAAM,CAAC,GAAG,GAAG,GAAG,CAAC;;AAEjB,QAAI,IAAI,GAAG,QAAQ,CAAC,oBAAoB,CAAE,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC;AACtD,QAAI,CAAC,WAAW,CAAE,MAAM,CAAE,CAAC;CAG9B;;AAED,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,CAAE,KAAK,CAAE,CAAC,OAAO,CAAE,CAAC,SAAS,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAAE,CAAC;AAChE,CAAC,CAAC,SAAS,CAAE,yCAAyC,CAAE,CAAC,KAAK,CAAE,GAAG,CAAE,CAAC;;AAEtE,IAAI,MAAM,GAAG,EAAE,CAAC,UAAU,CACrB,QAAQ,CAAE,IAAI,CAAE,CAChB,OAAO,CAAC,YAAM;AACX,WAAO,EAAE,CAAC,GAAG,CAAC,YAAY,CAAE;AACxB,WAAG,EAAE,SAAS;AACd,qBAAa,EAAE,iBAAiB;KACnC,CAAE,CAAC,KAAK,CAAE,CAAC,CAAE,CAAC;CAClB,CAAE,CACF,OAAO,CAAE,UAAA,IAAI;WAAI,EAAE,CAAC,UAAU,CAAC,IAAI,CAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAE;CAAA,CAAE,CAC/D,QAAQ,CAAE,UAAA,CAAC;WAAI,CAAC,CAAC,UAAU,CAAC,IAAI;CAAA,CAAE,CAAC;;AAExC,MAAM,CAAC,SAAS,CAAE,UAAA,KAAK,EAAI;AACvB,QAAI,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC;AACxC,QAAI,IAAI,GAAG,KAAK,CAAC,UAAU,CAAC,GAAG,GAAG,KAAK,CAAC;AACxC,KAAC,CAAC,MAAM,CAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAE,CAAC,KAAK,CAAE,GAAG,CAAE,CAAC;CACzD,CAAE,CAAC","file":"js/earthquake_viz.js","sourcesContent":["/// <reference path=\"../../Scripts/rx.dom.js\" />\r\n/// <reference path=\"../../Scripts/rx.all.js\" />\r\n/// <reference path=\"../../Scripts/leaflet/leaflet.js\" />\r\n\r\nvar QUAKE_URL = \"http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_day.geojsonp\";\r\n\r\nfunction loadJSONP( url ) {\r\n    let script = document.createElement( \"script\" );\r\n    script.src = url;\r\n\r\n    let head = document.getElementsByTagName( \"head\" )[0];\r\n    head.appendChild( script );\r\n\r\n\r\n}\r\n\r\nvar map = L.map( 'map' ).setView( [33.858631, -118.279602], 7 );\r\nL.tileLayer( 'http://{s}.tile.osm.org/{z}/{x}/{y}.png' ).addTo( map );\r\n\r\nvar quakes = Rx.Observable\r\n    .interval( 5000 )\r\n    .flatMap(() => {\r\n        return Rx.DOM.jsonpRequest( {\r\n            url: QUAKE_URL,\r\n            jsonpCallback: 'eqfeed_callback'\r\n        } ).retry( 3 );\r\n    } )\r\n    .flatMap( data => Rx.Observable.from( data.response.features ) )\r\n    .distinct( q => q.properties.code );\r\n\r\nquakes.subscribe( quake => {\r\n    let coords = quake.geometry.coordinates;\r\n    let size = quake.properties.mag * 10000;\r\n    L.circle( [coords[1], coords[0]], size ).addTo( map );\r\n} );"],"sourceRoot":"/source/"}